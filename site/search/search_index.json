{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue sur le site d'informatique du Gymnase d'Etoy","text":"<p>Diff\u00e9rentes informations sont \u00e0 disposition : </p> <ul> <li>Les plans d'\u00e9tudes</li> <li>Des outils </li> <li>Acc\u00e8s au Moodle informatique</li> <li>...</li> </ul>"},{"location":"1M/1MPE/","title":"Plan d'\u00e9tudes d'informatique en 1M","text":"<p>Cinq th\u00e8mes sont au programme de 1M :</p> <ul> <li>Repr\u00e9sentation et structuration de l\u2019information </li> <li>Introduction \u00e0 l\u2019algorithmique </li> <li>Introduction \u00e0 la programmation </li> <li>Architecture des ordinateurs </li> <li>Introduction aux enjeux sociaux </li> </ul>"},{"location":"2M/2MPE/","title":"Plan d'\u00e9tudes d'informatique en 2M","text":"<p>Cinq th\u00e8mes sont au programme de 2M : </p> <ul> <li>Algorithmique </li> <li>Programmation</li> <li>R\u00e9seaux</li> <li>Projets informatiques</li> <li>Enjeux de soci\u00e9t\u00e9</li> </ul>"},{"location":"OC/OCPE/","title":"Plan d'\u00e9tudes d'informatique en OC","text":"<p>Des th\u00e8mes s\u00e9lectionn\u00e9s parmi : </p> <ul> <li>Histoire et \u00e9pist\u00e9mologie de l\u2019informatique</li> <li>Enjeu de l\u2019informatique dans notre soci\u00e9t\u00e9</li> <li>Logiciel libre et format de sauvegarde public</li> <li>S\u00e9curit\u00e9, droit et \u00e9thique informatique. </li> <li>Codage de l\u2019information et protocoles de communication</li> <li>Technologie des r\u00e9seaux</li> <li>Architecture mat\u00e9rielle et logicielle de l\u2019ordinateur</li> <li>Robotique virtuelle ou r\u00e9elle</li> <li>Gestion et cr\u00e9ation de pages web dynamiques</li> <li>Gestion et cr\u00e9ation de bases de donn\u00e9es</li> <li>Algorithmique et programmation</li> </ul>"},{"location":"outils/utiliser_git/","title":"Utiliser github","text":""},{"location":"outils/utiliser_git/#creer-un-git-a-partir-dun-dossier-local-existant","title":"Cr\u00e9er un git \u00e0 partir d'un dossier local existant","text":"<ul> <li>Cr\u00e9er un repository sur github : add a readme</li> <li>Se placer dans mon dossier local : cd /Users/user/monDossierExistant</li> <li><code>git init -b main</code></li> <li><code>git add *</code></li> <li><code>git commit -m 'initial commit'</code></li> <li>Copier le lien fourni sur github https et le lier au dossier local :    <code>git remote add origin https://github.com/....git</code></li> <li><code>git remote -v</code> : pour v\u00e9rifier l'adresse du remote </li> <li><code>git push -u origin main</code> :  Push les changements locaux sur le remote que l'on a sp\u00e9cifi\u00e9 comme origine</li> <li><code>git push --set-upstream origin main</code> </li> </ul> <p>en cas d'erreur 'fetch first'</p> <p>Si l'erreur ! [rejected] main -&gt; main (fetch first) error apparait (par exemple si un README existait d\u00e9j\u00e0) :</p> <p><code>git push -f origin main</code></p>"},{"location":"outils/utiliser_git/#enregistrer-des-modifications","title":"Enregistrer des modifications","text":"<ul> <li><code>git add *</code> : ajouter tous les nouveaux fichiers </li> <li><code>git commit -m \"[message descriptif]\"</code> : enregistre les changements dans l'historique des versions </li> <li><code>git pull</code>: R\u00e9cup\u00e8re tout l'historique du d\u00e9p\u00f4t nomm\u00e9 et incorpore les modifications. git pull est la fusion de deux commandes <code>git fetch</code>(pour r\u00e9cup\u00e9rer le d\u00e9p\u00f4t distant vers le d\u00e9p\u00f4t local) et <code>git merge</code> (pour les fusionner).  </li> <li><code>git push</code> : Envoie tous les commits de la branche locale vers GitHub</li> <li><code>git fetch</code> : permet de v\u00e9rifier si le d\u00e9p\u00f4t contient des mises \u00e0 jour que vous n'auriez pas en local</li> </ul>"},{"location":"outils/utiliser_git/#annuler-le-suivi-dun-fichier-deja-archive","title":"Annuler le suivi d'un fichier d\u00e9j\u00e0 archiv\u00e9","text":"<ul> <li><code>git rm --cached FILENAME</code></li> </ul>"},{"location":"outils/utiliser_git/#realiser-une-fusion-avec-les-changements-depot-et-local","title":"R\u00e9aliser une fusion avec les changements d\u00e9p\u00f4t et local","text":"<ul> <li><code>git checkout main</code>: se placer sur la branche principale </li> <li><code>git merge mybranch</code>: pour grouper mybranch dans main </li> </ul>"},{"location":"outils/utiliser_git/#commandes-git-les-plus-utilisees","title":"Commandes git les plus utilis\u00e9es :","text":"<ul> <li><code>git branch -r</code>: voir les branches du d\u00e9p\u00f4t cheat-sheet</li> </ul>"},{"location":"outils/utiliser_git/#resolution-dun-conflit","title":"R\u00e9solution d'un conflit","text":"<ul> <li> <p>Si un fichier est modifi\u00e9 en local et sur le d\u00e9p\u00f4t distant, on se trouve dans le cas d'un conflit \u00e0 r\u00e9soudre apr\u00e8s avoir r\u00e9alis\u00e9 un git pull.</p> </li> <li> <p><code>git status</code> : pour voir l'\u00e9tat du git local S'il appara\u00eet \"You have unmerged paths.\", deux possibilit\u00e9s : soit r\u00e9soudre le conflit (fix conflicts, soit annuler le merge)</p> </li> </ul>"},{"location":"outils/utiliser_vscode/","title":"Comment coder en python sur VS Code sur MacOS","text":"<ol> <li>T\u00e9l\u00e9charger et installer Visual Studio Code (gratuit)</li> <li>Dans la barre de gauche, descriptions des ic\u00f4nes : </li> <li>fichiers : explorateur pour voir les fichiers ouverts</li> <li>loupe : pour recherche dans fichier</li> <li>Git </li> <li>Debugger </li> <li>Installer des extensions</li> <li>Ajouter extensions Python (la plus populaire)</li> <li>Pour pouvoir lancer VSCode avec le terminal via la commande Code il faut : </li> <li>Ouvrir le menu Commande Palette (Cmd+Shift+P)</li> <li>Taper shell commande et cliquer sur Shell Command: Install 'code' command in PATH command.</li> <li>VSCode pourra \u00eatre d\u00e9marr\u00e9 \u00e0 partir de la commande <code>code .</code></li> <li>Un workspace est un endroit pour lequel on peut avoir ses propres pr\u00e9f\u00e9rences et sp\u00e9cificit\u00e9s. Chaque projet dans vscode doit \u00eatre un workspace. Il faut donc toujours ouvrir vos projet par \"menu File &gt; open folder\" et pas en ouvrant seulement des fichiers contenu dans votre projet avec \"menu File &gt; open folder\".</li> </ol>"},{"location":"outils/utiliser_vscode/#creation-dun-environnement-virtuel-en-python","title":"Cr\u00e9ation d'un environnement virtuel en python","text":"<p>Un environnement virtuel permet d'installer des packages python uniquement dans cet environnement (et non dans l'ensemble de base des packages). </p> <ul> <li>Pour installer un package python on utilise : <code>pip3 install nomDuModule</code>. Par exemple : <code>pip3 install panda</code></li> <li>Pour voir les package install\u00e9s : <code>pip3 freeze</code></li> <li> <p>Pour donner les packages \u00e0 installer aux autres programmeurs, il faut cr\u00e9er un fichier requirements.txt qui contient tous les noms de ces packages : <code>pip3 freeze &gt; requirements.txt</code></p> </li> <li> <p>Se placer dans le dossier de son projet</p> </li> <li><code>python -m venv env</code> : par convention on appelle toujours un environnement virtuel env </li> <li><code>source env/bin/activate</code>: pour l'activer . Il est n\u00e9cessaire de toujours l'activer lorsque l'on veut travailler avec</li> <li><code>deactivate</code>: pour d\u00e9sactiver l'environnement virtuel python</li> <li>pip3 list : liste les paquets install\u00e9s dans l'environnement virtuel</li> </ul>"},{"location":"outils/utiliser_vscode/#conda-miniconda-anaconda","title":"Conda, Miniconda, Anaconda","text":"<p>Conda est un gestionnaire de paquets multiplateforme qui permet l\u2019installation et la mise \u00e0 jour de paquets (notamment Python). Permet d'installer dans le dossier d\u2019installation de Conda, sans besoin d\u2019acc\u00e8s administrateur.</p> <p>On peut au choix installer Anaconda ( = gestionnaire de paquet Conda + biblioth\u00e8ques scientifiques + un environnement de d\u00e9veloppement\u2026) ou Conda + qq biblioth\u00e8ques en installant miniconda ou installer conda seulement comme gestionnaire de paquet. (double emploi avec pip3).</p> <p>Si l'on a d\u00e9j\u00e0 une version de Python install\u00e9e, Conda demande lors de l\u2019installation s\u2019il faut mettre la version de Conda par d\u00e9faut (consiste \u00e0 red\u00e9finir le PATH pour y ajouter le dossier bin de Conda.) Ainsi, les scripts lanc\u00e9s en tant qu\u2019utilisateur \u00e0 la main, de m\u00eame que la commande python utiliseront le python de Conda, tandis que les scripts python du syst\u00e8me continueront \u00e0 utiliser le python du syst\u00e8me. Si vous ne le faites pas, alors en lan\u00e7ant la commande python, vous arriverez sur le python syst\u00e8me. Les biblioth\u00e8ques install\u00e9es avec Conda ne seront pas accessibles. Il vous faudra explicitement lancer la commande python du r\u00e9pertoire d\u2019installation Conda pour avoir acc\u00e8s \u00e0 ces derni\u00e8res.</p> <p><code>conda update -n base -c defaults conda</code> : mettre \u00e0 jour conda</p> <p><code>conda install noms_paquets</code>: pour installer un paquet <code>conda update noms_paquets</code>: pour mettre \u00e0 jour un paquet <code>conda update --all</code>: mettre \u00e0 jour tous les paquets <code>conda remove noms_paquets</code> : supprimer un paquet <code>conda list</code>: lister les paquets</p> <p><code>conda create -n myenv</code> : cr\u00e9er un environnement dans conda <code>conda install -n myenv noms_paquets</code> : pour installer un paquet dans myenv <code>conda info --envs</code> # forme courte : -e  <code>conda env list</code> : pour lister les environnements (celui avec * est le courant) sinon <code>conda info --envs</code> <code>conda activate myenv</code> : pour activer un environnement (celui de base s'appelle base: conda activate base) <code>conda deactivate</code> : pour d\u00e9sactiver un environnement  <code>conda env remove --name myenv</code> : supprimer un environnement</p> <p>Par d\u00e9faut les environnements sont install\u00e9s dans le dossier envs du dossier conda.  Avec pip on indique les packages dans un fichier requirements.txt, en g\u00e9n\u00e9ral avec conda c'est dans un fichier environment.yml <code>conda env create -f environment.yml</code>: pour cr\u00e9er un environnement \u00e0 partir du fichier environment.yml fourni.  Puis <code>conda activate myenv</code> <code>conda env export &gt; environment.yml</code> : pour exporter l'environnement actuel.</p> <p>On peut quand m\u00eame utiliser pip dans un environnement conda, mais installer le plus possible les extensions avec conda d'abord. </p>"},{"location":"outils/utiliser_vscode/#des-extensions-recommandees-pour-vscode","title":"Des extensions recommand\u00e9es pour VSCode","text":"<ul> <li>python</li> <li>Code Spell Checker et French - Code Spell Checker pour la correction orthographique</li> <li>git graph : visualisation des gits</li> <li>Material Icon Theme : pour de jolies icones</li> </ul> <p>bjoun cooment </p>"}]}